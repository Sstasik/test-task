{"ast":null,"code":"var _jsxFileName = \"/Users/marangulak/Desktop/test-taskr/src/Books/views/BooksList.js\";\nimport React from \"react\";\nimport { observer } from \"mobx-react\";\nconst BooksList = observer(_ref => {\n  let {\n    controller\n  } = _ref;\n  const books = controller.getBooks();\n  const isLoading = controller.getIsLoading();\n  const error = controller.getError();\n  const showPrivateBooks = controller.getShowPrivateBooks();\n  const handleToggleView = isPrivate => {\n    controller.setShowPrivateBooks(isPrivate);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"Error: \", error);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"books-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleToggleView(false),\n    className: !showPrivateBooks ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"All Books\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleToggleView(true),\n    className: showPrivateBooks ? \"active\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Private Books\")), books.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"No books available\") : books.map((book, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, book.author, \": \", book.name)));\n});\nexport default BooksList;","map":{"version":3,"names":["React","observer","BooksList","_ref","controller","books","getBooks","isLoading","getIsLoading","error","getError","showPrivateBooks","getShowPrivateBooks","handleToggleView","isPrivate","setShowPrivateBooks","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","book","i","key","author","name"],"sources":["/Users/marangulak/Desktop/test-taskr/src/Books/views/BooksList.js"],"sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react\";\n\nconst BooksList = observer(({ controller }) => {\n  const books = controller.getBooks();\n  const isLoading = controller.getIsLoading();\n  const error = controller.getError();\n  const showPrivateBooks = controller.getShowPrivateBooks();\n\n  const handleToggleView = (isPrivate) => {\n    controller.setShowPrivateBooks(isPrivate);\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <div className=\"books-toggle\">\n        <button\n          onClick={() => handleToggleView(false)}\n          className={!showPrivateBooks ? \"active\" : \"\"}\n        >\n          All Books\n        </button>\n        <button\n          onClick={() => handleToggleView(true)}\n          className={showPrivateBooks ? \"active\" : \"\"}\n        >\n          Private Books\n        </button>\n      </div>\n\n      {books.length === 0 ? (\n        <div>No books available</div>\n      ) : (\n        books.map((book, i) => (\n          <div key={i}>\n            {book.author}: {book.name}\n          </div>\n        ))\n      )}\n    </div>\n  );\n});\n\nexport default BooksList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AAErC,MAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAA,IAAoB;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EACxC,MAAME,KAAK,GAAGD,UAAU,CAACE,QAAQ,CAAC,CAAC;EACnC,MAAMC,SAAS,GAAGH,UAAU,CAACI,YAAY,CAAC,CAAC;EAC3C,MAAMC,KAAK,GAAGL,UAAU,CAACM,QAAQ,CAAC,CAAC;EACnC,MAAMC,gBAAgB,GAAGP,UAAU,CAACQ,mBAAmB,CAAC,CAAC;EAEzD,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtCV,UAAU,CAACW,mBAAmB,CAACD,SAAS,CAAC;EAC3C,CAAC;EAED,IAAIP,SAAS,EAAE;IACb,oBAAOP,KAAA,CAAAgB,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,YAAe,CAAC;EAC9B;EAEA,IAAIb,KAAK,EAAE;IACT,oBAAOT,KAAA,CAAAgB,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,SAAO,EAACb,KAAW,CAAC;EAClC;EAEA,oBACET,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEtB,KAAA,CAAAgB,aAAA;IAAKO,SAAS,EAAC,cAAc;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BtB,KAAA,CAAAgB,aAAA;IACEQ,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,KAAK,CAAE;IACvCU,SAAS,EAAE,CAACZ,gBAAgB,GAAG,QAAQ,GAAG,EAAG;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9C,WAEO,CAAC,eACTtB,KAAA,CAAAgB,aAAA;IACEQ,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,IAAI,CAAE;IACtCU,SAAS,EAAEZ,gBAAgB,GAAG,QAAQ,GAAG,EAAG;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7C,eAEO,CACL,CAAC,EAELjB,KAAK,CAACoB,MAAM,KAAK,CAAC,gBACjBzB,KAAA,CAAAgB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,oBAAuB,CAAC,GAE7BjB,KAAK,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAChB5B,KAAA,CAAAgB,aAAA;IAAKa,GAAG,EAAED,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACTK,IAAI,CAACG,MAAM,EAAC,IAAE,EAACH,IAAI,CAACI,IAClB,CACN,CAEA,CAAC;AAEV,CAAC,CAAC;AAEF,eAAe7B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}