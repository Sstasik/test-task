{"ast":null,"code":"import Book from \"../models/Book\";\nimport ApiGateway from \"../../Shared/ApiGateway\";\nexport default class BooksService {\n  constructor() {\n    this.httpGateway = new ApiGateway();\n  }\n  async getBooks() {\n    const booksDto = await this.httpGateway.get(\"/\");\n    return booksDto.map(bookDto => new Book(bookDto));\n  }\n  async getPrivateBooks() {\n    const booksDto = await this.httpGateway.get(\"/private\");\n    return booksDto.map(bookDto => new Book(bookDto));\n  }\n  async addBook(book) {\n    const payload = {\n      name: book.name,\n      author: book.author\n    };\n    const response = await this.httpGateway.post(\"\", payload);\n    return response && response.status === \"ok\";\n  }\n  async addPrivateBook(book) {\n    const payload = {\n      name: book.name,\n      author: book.author\n    };\n\n    // Since Swagger doesn't have a separate endpoint for POST /private,\n    // this method uses the same endpoint as addBook\n    const response = await this.httpGateway.post(\"/\", payload);\n    return response && response.status === \"ok\";\n  }\n}","map":{"version":3,"names":["Book","ApiGateway","BooksService","constructor","httpGateway","getBooks","booksDto","get","map","bookDto","getPrivateBooks","addBook","book","payload","name","author","response","post","status","addPrivateBook"],"sources":["/Users/marangulak/Desktop/test-task/src/Books/services/BooksService.js"],"sourcesContent":["import Book from \"../models/Book\";\nimport ApiGateway from \"../../Shared/ApiGateway\";\n\nexport default class BooksService {\n  constructor() {\n    this.httpGateway = new ApiGateway();\n  }\n\n  async getBooks() {\n    const booksDto = await this.httpGateway.get(\"/\");\n    return booksDto.map((bookDto) => new Book(bookDto));\n  }\n\n  async getPrivateBooks() {\n    const booksDto = await this.httpGateway.get(\"/private\");\n    return booksDto.map((bookDto) => new Book(bookDto));\n  }\n\n  async addBook(book) {\n    const payload = {\n      name: book.name,\n      author: book.author,\n    };\n\n    const response = await this.httpGateway.post(\"\", payload);\n    return response && response.status === \"ok\";\n  }\n\n  async addPrivateBook(book) {\n    const payload = {\n      name: book.name,\n      author: book.author,\n    };\n\n    // Since Swagger doesn't have a separate endpoint for POST /private,\n    // this method uses the same endpoint as addBook\n    const response = await this.httpGateway.post(\"/\", payload);\n    return response && response.status === \"ok\";\n  }\n}\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,gBAAgB;AACjC,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,eAAe,MAAMC,YAAY,CAAC;EAChCC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,WAAW,GAAG,IAAIH,UAAU,CAAC,CAAC;EACrC;EAEA,MAAMI,QAAQA,CAAA,EAAG;IACf,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACF,WAAW,CAACG,GAAG,CAAC,GAAG,CAAC;IAChD,OAAOD,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK,IAAIT,IAAI,CAACS,OAAO,CAAC,CAAC;EACrD;EAEA,MAAMC,eAAeA,CAAA,EAAG;IACtB,MAAMJ,QAAQ,GAAG,MAAM,IAAI,CAACF,WAAW,CAACG,GAAG,CAAC,UAAU,CAAC;IACvD,OAAOD,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK,IAAIT,IAAI,CAACS,OAAO,CAAC,CAAC;EACrD;EAEA,MAAME,OAAOA,CAACC,IAAI,EAAE;IAClB,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,MAAM,EAAEH,IAAI,CAACG;IACf,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACZ,WAAW,CAACa,IAAI,CAAC,EAAE,EAAEJ,OAAO,CAAC;IACzD,OAAOG,QAAQ,IAAIA,QAAQ,CAACE,MAAM,KAAK,IAAI;EAC7C;EAEA,MAAMC,cAAcA,CAACP,IAAI,EAAE;IACzB,MAAMC,OAAO,GAAG;MACdC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,MAAM,EAAEH,IAAI,CAACG;IACf,CAAC;;IAED;IACA;IACA,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACZ,WAAW,CAACa,IAAI,CAAC,GAAG,EAAEJ,OAAO,CAAC;IAC1D,OAAOG,QAAQ,IAAIA,QAAQ,CAACE,MAAM,KAAK,IAAI;EAC7C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}